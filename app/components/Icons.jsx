import React from "react";

export const ChevronDown = ({ fill, size, height, width, ...props }) => {
  return (
    <svg
      fill="none"
      height={size || height || 24}
      viewBox="0 0 24 24"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="m19.92 8.95-6.52 6.52c-.77.77-2.03.77-2.8 0L4.08 8.95"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth={1.5}
      />
    </svg>
  );
};

export const Lightbulb = ({
  fill = "#FFFFFF", // Default color for both the bulb and screw base
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 24}
      viewBox="0 0 24 24"
      width={size || width || 24}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      {/* Bulb shape */}
      <path
        d="M9 18h6a2 2 0 0 0 2-2v-2.5a7 7 0 1 0-10 0V16a2 2 0 0 0 2 2z"
        stroke={fill} // Explicitly set stroke to the fill prop color
        fill="none"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
      />
      
      {/* Filament */}
      <line 
        x1="12" 
        y1="9" 
        x2="12" 
        y2="13" 
        stroke={fill} // Explicitly set stroke to the fill prop color
        strokeLinecap="round" 
        strokeLinejoin="round" 
        strokeWidth={1.5} 
      />
      
      {/* Base */}
      <rect 
        x="9" 
        y="18" 
        width="6" 
        height="2" 
        stroke={fill} // Explicitly set stroke to the fill prop color
        fill="none"
        strokeLinecap="round" 
        strokeLinejoin="round" 
        strokeWidth={1.5} 
      />
      <rect 
        x="9" 
        y="20" 
        width="6" 
        height="2" 
        stroke={fill} // Explicitly set stroke to the fill prop color
        fill="none"
        strokeLinecap="round" 
        strokeLinejoin="round" 
        strokeWidth={1.5} 
      />
    </svg>
  );
};

export const SHousing = ({ fill = "#666", size, height, width, ...props }) => {
  return (
    <svg
      height={size || height || 64}
      viewBox="0 0 64 64"
      width={size || width || 64}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      {/* Building */}
      <rect
        x="8"
        y="24"
        width="48"
        height="32"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />
      
      {/* Roof */}
      <polygon
        points="4,24 32,8 60,24"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />
      
      {/* Door */}
      <rect
        x="26"
        y="36"
        width="12"
        height="20"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />

      {/* Windows */}
      <rect
        x="12"
        y="30"
        width="8"
        height="8"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />
      <rect
        x="44"
        y="30"
        width="8"
        height="8"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />

      {/* Lines on the door */}
      <line
        x1="26"
        y1="46"
        x2="38"
        y2="46"
        stroke={fill}
        strokeWidth={3}
      />
      <line
        x1="26"
        y1="50"
        x2="38"
        y2="50"
        stroke={fill}
        strokeWidth={3}
      />
    </svg>
  );
};

export const Warehouse1 = ({ fill = "#666", size, height, width, ...props }) => {
  return (
    <svg
      height={size || height || 64}
      viewBox="0 0 64 64"
      width={size || width || 64}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      {/* Building */}
      <rect
        x="8"
        y="24"
        width="48"
        height="32"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />
      
      {/* Roof */}
      <polygon
        points="4,24 32,8 60,24"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />
      
      {/* Door */}
      <rect
        x="20"
        y="30"
        width="24"
        height="26"
        fill="none"
        stroke={fill}
        strokeWidth={3}
      />

    </svg>
  );
};

export const TagUser = ({
  fill = "currentColor",
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M18 18.86h-.76c-.8 0-1.56.31-2.12.87l-1.71 1.69c-.78.77-2.05.77-2.83 0l-1.71-1.69c-.56-.56-1.33-.87-2.12-.87H6c-1.66 0-3-1.33-3-2.97V4.98c0-1.64 1.34-2.97 3-2.97h12c1.66 0 3 1.33 3 2.97v10.91c0 1.63-1.34 2.97-3 2.97Z"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit={10}
        strokeWidth={1.5}
      />
      <path
        d="M12 10a2.33 2.33 0 1 0 0-4.66A2.33 2.33 0 0 0 12 10ZM16 15.66c0-1.8-1.79-3.26-4-3.26s-4 1.46-4 3.26"
        stroke={fill}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={1.5}
      />
    </svg>
  );
};

export const HouseIcon = ({
  fill = "#231F20", // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 64} // Default height
      width={size || width || 64}   // Default width
      viewBox="0 0 64 64"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g>
        <rect x="16" y="34" fill={fill} width="6" height="6" />
        <rect x="42" y="34" fill={fill} width="6" height="6" />
        <path
          fill={fill} // Use the `fill` prop
          d="M63.211,29.789L34.438,1.015c0,0-0.937-1.015-2.43-1.015s-2.376,0.991-2.376,0.991L20,10.604V5
          c0-0.553-0.447-1-1-1h-6c-0.553,0-1,0.447-1,1v13.589L0.783,29.783C0.24,30.326,0,31.172,0,32c0,1.656,1.343,3,3,3
          c0.828,0,1.662-0.251,2.205-0.794L6,33.411V60c0,2.211,1.789,4,4,4h44c2.211,0,4-1.789,4-4V33.394l0.804,0.804
          C59.347,34.739,60.172,35,61,35c1.657,0,3-1.343,3-3C64,31.171,63.754,30.332,63.211,29.789z M24,41c0,0.553-0.447,1-1,1h-8
          c-0.553,0-1-0.447-1-1v-8c0-0.553,0.447-1,1-1h8c0.553,0,1,0.447,1,1V41z M38,62.002H26v-15c0-0.553,0.447-1,1-1h10
          c0.553,0,1,0.447,1,1V62.002z M50,41c0,0.553-0.447,1-1,1h-8c-0.553,0-1-0.447-1-1v-8c0-0.553,0.447-1,1-1h8c0.553,0,1,0.447,1,1
          V41z M61,33c-0.276,0-0.602-0.036-0.782-0.217L32.716,5.281c-0.195-0.195-0.451-0.293-0.707-0.293s-0.512,0.098-0.707,0.293
          L3.791,32.793C3.61,32.974,3.276,33,3,33c-0.553,0-1-0.447-1-1c0-0.276,0.016-0.622,0.197-0.803L31.035,2.41
          c0,0,0.373-0.41,0.974-0.41s0.982,0.398,0.982,0.398l28.806,28.805C61.978,31.384,62,31.724,62,32C62,32.552,61.553,33,61,33z"
        />
      </g>
    </svg>
  );
};

export const Warehouse = ({
  fill = '#000000', // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 256 230"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M61.2,106h37.4v31.2H61.2V106z M61.2,178.7h37.4v-31.2H61.2V178.7z M61.2,220.1h37.4v-31.2H61.2V220.1z M109.7,178.7H147
        v-31.2h-37.4V178.7z M109.7,220.1H147v-31.2h-37.4V220.1z M158.2,188.9v31.2h37.4v-31.2H158.2z M255,67.2L128.3,7.6L1.7,67.4
        l7.9,16.5l16.1-7.7v144h18.2V75.6h169v144.8h18.2v-144l16.1,7.5L255,67.2z"
        fill={fill} // Use the fill prop
      />
    </svg>
  );
};

export const Education = ({
  fill = "#010101", // Default fill color
  size,
  height,
  width,
  strokeWidth = 2, // Added strokeWidth for thicker lines
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 50 48"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fill={fill} // Use the fill prop for fills
        stroke={fill} // Apply the stroke with the fill color
        strokeWidth={strokeWidth} // Thicker stroke width
        d="M41.5,7h-34C7.224,7,7,7.224,7,7.5v21.83c0,0.276,0.224,0.5,0.5,0.5h10.663l-2.605,8.918  
        c-0.144,0.492-0.087,1.01,0.16,1.459c0.246,0.449,0.653,0.775,1.145,0.917c0.177,0.052,0.356,0.076,0.533,0.076  
        c0.83,0,1.597-0.544,1.841-1.379l2.918-9.993h3.69l2.919,9.993c0.244,0.835,1.011,1.379,1.841,1.379  
        c0.176,0,0.355-0.024,0.533-0.076c0.492-0.143,0.899-0.468,1.145-0.917c0.247-0.449,0.304-0.967,0.16-1.459l-2.605-8.918H41.5  
        c0.276,0,0.5-0.224,0.5-0.5V7.5C42,7.224,41.776,7,41.5,7z M41,8v18.012H18.583V24c0-0.276-0.224-0.5-0.5-0.5H12  
        c-0.276,0-0.5,0.224-0.5,0.5v2.012H8V8H41z M17.583,26.012H12.5V24.5h5.083V26.012z M18.276,39.542  
        c-0.141,0.484-0.651,0.762-1.135,0.623c-0.235-0.068-0.429-0.224-0.547-0.439c-0.118-0.215-0.146-0.462-0.077-0.698l2.688-9.199  
        h1.908L18.276,39.542z M31.482,39.029c0.069,0.235,0.042,0.483-0.077,0.698c-0.118,0.215-0.312,0.371-0.547,0.439  
        c-0.484,0.137-0.995-0.139-1.135-0.623l-2.837-9.712h1.908L31.482,39.029z M29.17,28.83h-2.95h-4.44h-2.95H8v-1.818h4h6.083H41  
        v1.818H29.17z"
      />
    </svg>
  );
};

export const SmartRetail = ({
  fill = "#000000", // Default fill color
  size,
  height,
  width,
  strokeWidth = 1, // Added strokeWidth for thicker lines
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 -5.5 35 35"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fill={fill} // Use the fill prop
        stroke={fill} // Apply stroke to control line thickness
        strokeWidth={strokeWidth} // Thicker stroke width
        d="M31.364 19.73h-.989v-15.25h.989zm-2.078-3.761h-2.473v-11.489h2.473zm-1.108 3.35v.002c0 .198-.091.374-.234.49l-.001.001c-.147.126-.34.202-.55.202-.01 0-.021 0-.031-.001h.001c-.01 0-.022.001-.034.001-.213 0-.407-.078-.556-.208l.001.001c-.138-.116-.225-.289-.225-.481 0-.002 0-.004 0-.006v-.062h.558v.072.006c0 .067.027.128.07.173.048.045.112.072.182.072.006 0 .012 0 .017-.001h-.001c.005 0 .011.001.016.001.07 0 .134-.028.182-.072.044-.045.071-.106.071-.174 0-.002 0-.004 0-.006v-.583c-.112.085-.254.136-.407.137-.015.001-.032.002-.05.002-.188 0-.358-.078-.48-.203-.098-.122-.158-.279-.158-.449 0-.015 0-.03.001-.045v.002-.499c.007-.139.06-.265.142-.365l-.001.001c.092-.108.211-.189.348-.234l.005-.002c.092-.032.197-.051.308-.051h.01c.01 0 .021-.001.032-.001.214 0 .409.079.558.21l-.001-.001c.138.116.225.289.225.482v.006zm-2.205-3.35h-1.485v-11.489h1.485zm-.158 3.35c0 .202-.098.38-.249.491l-.002.001c-.157.126-.359.202-.579.202-.009 0-.018 0-.027 0h.001-.042c-.008 0-.017 0-.026 0-.219 0-.421-.077-.579-.205l.002.001c-.15-.113-.246-.29-.247-.49v-.265c0-.001 0-.001 0-.002 0-.188.085-.356.218-.469l.001-.001c.062-.057.135-.105.214-.14l.005-.002c-.145-.061-.261-.166-.334-.298l-.002-.003c-.038-.074-.06-.162-.06-.255 0-.007 0-.013 0-.02v.001-.158c0-.005 0-.011 0-.017 0-.18.079-.342.205-.453l.001-.001c.149-.13.346-.209.561-.209.015 0 .03 0 .044.001h-.002.042c.013-.001.028-.001.044-.001.216 0 .413.079.564.21l-.001-.001c.126.112.205.275.205.457v.015-.001.158.013c0 .174-.077.33-.198.437l-.001.001c-.056.05-.121.092-.192.123l-.005.002c.157.071.283.186.368.328l.002.004c.043.074.069.164.069.259v.018-.001zm-2.49-1.809-.755 2.473h-.528l.755-2.473h-1.089v-.44h1.617zm-2.308-13.03h1.98v11.489h-1.978zm-.048 13.314h-.562v-.072c0-.002 0-.004 0-.006 0-.068-.027-.129-.071-.174-.046-.046-.11-.074-.18-.074-.006 0-.012 0-.018.001h.001c-.005 0-.011-.001-.017-.001-.071 0-.134.028-.181.074-.043.045-.07.106-.07.173v.007.581c.111-.084.251-.134.404-.134h.004c.016-.001.034-.002.053-.002.188 0 .358.078.479.203.099.121.159.277.159.447 0 .015 0 .03-.001.045v-.002.499c-.01.192-.103.36-.245.47l-.001.001c-.146.118-.333.189-.537.189-.009 0-.018 0-.027 0h.001c-.01 0-.022.001-.034.001-.213 0-.407-.078-.555-.208l.001.001c-.138-.116-.225-.289-.225-.481 0-.002 0-.004 0-.006v-1.587c0-.002 0-.005 0-.007 0-.143.047-.275.127-.381l-.001.002c.091-.117.213-.206.355-.253l.005-.001c.093-.035.201-.055.313-.055h.011-.001c.009 0 .021-.001.032-.001.214 0 .409.079.558.21l-.001-.001c.138.116.225.289.225.483v.005zm-2.364 1.493v.013c0 .209-.098.395-.25.516l-.001.001c-.154.124-.353.2-.569.2-.012 0-.025 0-.037-.001h.002c-.009 0-.02.001-.031.001-.214 0-.41-.079-.559-.21l.001.001c-.138-.116-.225-.289-.225-.483 0-.002 0-.004 0-.005v-.069l.515-.032.012.099c.004.109.074.2.171.235l.002.001c.029.012.063.019.098.019q.33 0 .33-.281v-.712c-.001-.089-.047-.167-.117-.211l-.001-.001c-.039-.025-.086-.039-.136-.039-.006 0-.011 0-.017.001h.001c-.005 0-.012-.001-.018-.001-.077 0-.147.035-.192.091-.035.046-.057.104-.058.167v.079h-.538v-1.59h1.574v.44h-1.036v.625c.06-.066.136-.115.222-.143l.004-.001c.051-.016.11-.026.171-.026h.008c.016-.001.035-.002.053-.002.185 0 .352.079.469.204.092.123.148.277.148.445 0 .017-.001.033-.002.049v-.002zm-2.297-14.807h.989v11.489h-.989zm-.118 14.874h-.344v.627h-.538v-.627h-.952v-.442l.952-1.843h.538v1.843h.344zm-2.574-.069v.007c0 .215-.106.405-.269.521l-.002.001c-.164.124-.371.199-.596.199-.009 0-.019 0-.028 0h.001c-.008 0-.017 0-.026 0-.219 0-.421-.077-.579-.205l.002.001c-.15-.113-.247-.29-.248-.49v-.072l.512-.032.011.102c.007.073.043.136.096.179h.001c.055.044.126.07.202.07h.015-.001q.37 0 .37-.281v-.171q0-.447-.575-.447v-.376c.016.001.034.002.053.002.154 0 .296-.054.407-.144l-.001.001c.085-.085.137-.203.137-.332 0-.007 0-.015-.001-.022v.001-.067c0-.191-.102-.285-.307-.285-.007-.001-.016-.001-.024-.001-.091 0-.172.041-.226.106-.038.054-.06.121-.06.194v.018-.001.069h-.526v-.067c0-.008-.001-.018-.001-.028 0-.186.074-.354.194-.478.147-.14.347-.225.566-.225.018 0 .036.001.053.002h-.002c.013-.001.028-.001.044-.001.216 0 .413.079.564.21l-.001-.001c.126.112.205.275.205.457v.015-.001.118.008c0 .182-.076.346-.199.462-.057.055-.123.103-.194.139l-.005.002c.157.071.283.186.368.328l.002.004c.043.075.069.165.069.26v.017-.001zm-2.12-3.315h-1.485v-11.489h1.485zm-.41 3.582v.43h-1.711v-.403c.036-.061.075-.113.118-.161l-.001.001c.037-.045.078-.094.118-.148l.139-.164q.118-.137.385-.439c.137-.15.26-.318.364-.498l.007-.014c.059-.102.095-.223.099-.352v-.001c0-.001 0-.003 0-.004 0-.086-.035-.164-.091-.22-.063-.06-.149-.097-.243-.097-.005 0-.01 0-.014 0h.001c-.004 0-.009 0-.014 0-.139 0-.257.087-.304.209l-.001.002c-.019.046-.031.099-.031.155v.013-.001.112h-.53v-.077c-.001-.014-.001-.031-.001-.047 0-.235.106-.445.273-.584l.001-.001c.158-.12.358-.193.575-.193.016 0 .032 0 .048.001h-.002.021c.222 0 .426.082.582.217l-.001-.001c.151.118.247.3.25.504-.001.212-.061.41-.165.578l.003-.005c-.132.198-.268.37-.416.53l.003-.003q-.087.101-.261.318l-.097.118c-.062.078-.111.139-.143.184-.009.012-.017.025-.022.04v.001zm-2.162-3.582h-1.98v-11.489h1.98zm-.288 4.014h-.538v-2.237h-.459v-.306c.137-.013.263-.055.373-.12l-.004.002c.106-.057.192-.141.25-.242l.002-.003h.376zm-2.644-.253h-1.485v-15.25h1.485zm6.749-15.25h2.473v11.489h-2.473zm5.828 0h1.485v11.489h-1.485zm16.251-4.475h-34.34c-.273 0-.495.221-.495.495v23.01c0 .273.221.495.495.495h34.34c.273 0 .495-.221.495-.495v-23.01c0-.273-.221-.495-.495-.495z"
      />
    </svg>
  );
};

export const Analytics = ({
  fill = "#FFFFFF", // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill={fill} // Apply fill prop
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 49.336 49.336" // Original viewBox dimensions
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g>
        <g id="_x37__94_">
          <g>
            <path
              d="M14.067,27.082c1.272,0.068,2.192-1.084,2.256-2.256c0.004-0.08-0.011-0.147-0.036-0.205
                c-0.047-0.342-0.145-0.659-0.306-0.931c0.616-0.714,1.231-1.428,1.849-2.143c0.168-0.196,0.336-0.391,0.506-0.586
                c0.455,0.431,1.068,0.702,1.782,0.74c0.714,0.038,1.33-0.255,1.786-0.719c0.952,1.063,1.903,2.126,2.854,3.189
                c-0.428,0.586-0.692,1.308-0.731,2.034c0.103,1.895,1.456,3.247,3.351,3.349c1.89,0.103,3.254-1.608,3.349-3.349
                c0.053-0.971-0.373-1.801-1.035-2.393c0.883-1.325,1.765-2.65,2.646-3.975c2.168,0.782,5.02-0.365,5.186-3.442
                c0.115-2.151-1.83-3.705-3.812-3.812c-2.151-0.116-3.705,1.832-3.812,3.812c-0.004,0.077,0.009,0.143,0.031,0.2
                c0.127,1.306,0.736,2.252,1.577,2.821c-0.858,1.29-1.718,2.581-2.577,3.871c-0.479-0.25-1.017-0.402-1.555-0.432
                c-0.762-0.041-1.438,0.216-1.979,0.647c-0.983-1.099-1.967-2.198-2.952-3.297c0.169-0.353,0.274-0.738,0.295-1.127
                c0.08-1.479-1.261-2.55-2.624-2.624c-1.479-0.08-2.549,1.261-2.622,2.624c-0.004,0.076,0.008,0.142,0.03,0.198
                c0.04,0.331,0.122,0.641,0.255,0.918c-0.809,0.938-1.617,1.874-2.425,2.811c-0.358-0.252-0.795-0.409-1.289-0.436
                c-1.272-0.068-2.192,1.085-2.257,2.256C11.742,26.1,12.897,27.02,14.067,27.082z"
            />
            <path d="M0,4.301v32.532h17.69v6.698h13.349v-6.698h18.297V4.301H0z M44.336,31.833H5V9.301h39.336V31.833z" />
            <rect x="10.503" y="43.658" width="27.724" height="1.377" />
          </g>
        </g>
      </g>
    </svg>
  );
};

export const EyeIcon = ({
  fill = "#FFFFFF", // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none" // Keep the fill rule as none
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fill={fill} // Use the fill prop for customizing color
        fillRule="evenodd"
        d="M3.415 10.242c-.067-.086-.13-.167-.186-.242a16.806 16.806 0 011.803-2.025C6.429 6.648 8.187 5.5 10 5.5c1.813 0 3.57 1.148 4.968 2.475A16.816 16.816 0 0116.771 10a16.9 16.9 0 01-1.803 2.025C13.57 13.352 11.813 14.5 10 14.5c-1.813 0-3.57-1.148-4.968-2.475a16.799 16.799 0 01-1.617-1.783zm15.423-.788L18 10l.838.546-.002.003-.003.004-.01.016-.037.054a17.123 17.123 0 01-.628.854 18.805 18.805 0 01-1.812 1.998C14.848 14.898 12.606 16.5 10 16.5s-4.848-1.602-6.346-3.025a18.806 18.806 0 01-2.44-2.852 6.01 6.01 0 01-.037-.054l-.01-.016-.003-.004-.001-.002c0-.001-.001-.001.837-.547l-.838-.546.002-.003.003-.004.01-.016a6.84 6.84 0 01.17-.245 18.804 18.804 0 012.308-2.66C5.151 5.1 7.394 3.499 10 3.499s4.848 1.602 6.346 3.025a18.803 18.803 0 012.44 2.852l.037.054.01.016.003.004.001.002zM18 10l.838-.546.355.546-.355.546L18 10zM1.162 9.454L2 10l-.838.546L.807 10l.355-.546zM9 10a1 1 0 112 0 1 1 0 01-2 0zm1-3a3 3 0 100 6 3 3 0 000-6z"
      />
    </svg>
  );
};

export const ShieldIcon = ({
  fill = "#FFFFFF", // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 16 16"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fill={fill} // Use the fill prop for customizable color
        d="m 2 0 c -0.550781 0 -1 0.449219 -1 1 v 8 c 0 2.5 1.816406 4.246094 3.445312 5.332031 c 1.628907 1.085938 3.238282 1.617188 3.238282 1.617188 c 0.207031 0.070312 0.425781 0.070312 0.632812 0 c 0 0 1.609375 -0.53125 3.238282 -1.617188 c 1.628906 -1.085937 3.445312 -2.832031 3.445312 -5.332031 v -8 c 0 -0.550781 -0.449219 -1 -1 -1 z m 1 2 h 10 v 7 c 0 1.5 -1.183594 2.753906 -2.554688 3.667969 c -1.214843 0.808593 -2.179687 1.128906 -2.445312 1.226562 c -0.265625 -0.097656 -1.230469 -0.417969 -2.445312 -1.226562 c -1.371094 -0.914063 -2.554688 -2.167969 -2.554688 -3.667969 z m 1 1 v 6 c 0 1 0.867188 2.007812 2.109375 2.835938 c 0.933594 0.621093 1.472656 0.785156 1.890625 0.949218 v -9.785156 z m 0 0"
      />
    </svg>
  );
};

export const Pound = ({
  fill = "none", // Default fill color for path
  stroke = "#FFFFFF", // Default stroke color
  strokeWidth = 2.5, // Default stroke width
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill="none"
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M5 20H19M5 13H15M18 6.81794C17.1896 5.14985 15.4791 4 13.5 4C10.7386 4 8.5 6.23858 8.5 9V17C8.5 18.6569 7.15685 20 5.5 20"
        stroke={stroke} // Use the stroke prop for color
        strokeWidth={strokeWidth} // Use strokeWidth prop
        strokeLinecap="round" // Round line endings
      />
    </svg>
  );
};

export const UniCap = ({
  fill = "#000000", // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill={fill} // Use the fill prop
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 260 188"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M134.3,109.2L202,83.8V146c0,13.4-32.2,24.3-72,24.3S58,159.4,58,146V83.8l67.9,25.4l4.2,1.6L134.3,109.2z M130.1,98L258,50
        L130.1,2L2,50l20,7.5v81.8c-4.7,2.2-8,7.1-8,12.7v34h28v-34c0-5.7-3.3-10.6-8.1-12.8V61.9L130.1,98z"
      />
    </svg>
  );
};

export const Temp = ({
  fill = "#FFFFFF", // Default fill color
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill={fill} // Apply fill prop
      height={size || height || 800} // Default height
      width={size || width || 800}   // Default width
      viewBox="0 0 32 32"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <title>temperature-snow</title>
      <path d="M9.25 21.001v-2.033c0-0.69-0.56-1.25-1.25-1.25s-1.25 0.56-1.25 1.25v0 2.033c-1.184 0.503-2 1.656-2 3 0 1.795 1.455 3.25 3.25 3.25s3.25-1.455 3.25-3.25c0-1.344-0.816-2.497-1.979-2.992l-0.021-0.008zM29.389 16.353l-3.796 2.111-4.267-2.463 4.265-2.462 3.804 2.11c0.174 0.099 0.382 0.157 0.604 0.157v0c0.001 0 0.002 0 0.003 0 0.69 0 1.249-0.559 1.249-1.249 0-0.468-0.258-0.876-0.639-1.09l-0.006-0.003-2.49-1.381 1.84-1.062c0.374-0.221 0.62-0.622 0.62-1.08 0-0.691-0.56-1.25-1.25-1.25-0.228 0-0.442 0.061-0.626 0.168l0.006-0.003-1.838 1.061 0.045-2.846c0-0.006 0-0.014 0-0.021 0-0.683-0.549-1.238-1.23-1.249h-0.001c-0.676 0.028-1.22 0.558-1.269 1.226l-0 0.004-0.069 4.343-4.267 2.464v-4.923l3.73-2.235c0.366-0.222 0.608-0.619 0.608-1.072 0-0.69-0.56-1.25-1.25-1.25-0.237 0-0.459 0.066-0.648 0.181l0.006-0.003-2.445 1.465v-2.125c0-0.69-0.56-1.25-1.25-1.25s-1.25 0.56-1.25 1.25v0 2.122l-2.438-1.464c-0.185-0.113-0.408-0.181-0.647-0.181-0.69 0-1.25 0.56-1.25 1.25 0 0.454 0.242 0.851 0.604 1.07l0.006 0.003 3.725 2.238v4.925l-4.326-2.498v-5.33c0-6.904-10.5-6.904-10.5 0v13.048c-1.231 1.292-1.988 3.045-1.988 4.975 0 3.987 3.232 7.219 7.219 7.219 2.679 0 5.017-1.459 6.263-3.626l0.019-0.035c0.066 0.025 0.143 0.046 0.224 0.059l0.007 0.001c0.001 0 0.002 0 0.003 0 0.236 0 0.457-0.066 0.645-0.181l-0.005 0.003 2.441-1.466v2.124c0 0.69 0.56 1.25 1.25 1.25s1.25-0.56 1.25-1.25v0-2.125l2.443 1.463c0.183 0.112 0.405 0.178 0.643 0.178 0.69 0 1.25-0.56 1.25-1.25 0-0.453-0.241-0.85-0.602-1.069l-0.006-0.003-3.729-2.232v-4.926l4.262 2.461 0.076 4.351c0.012 0.681 0.566 1.229 1.249 1.229 0 0 0.001 0 0.001 0h0.021c0.681-0.012 1.229-0.567 1.229-1.25 0-0.008-0-0.015-0-0.023l0 0.001-0.050-2.85 1.841 1.063c0.178 0.103 0.391 0.164 0.619 0.164 0.69 0 1.25-0.559 1.25-1.25 0-0.457-0.246-0.858-0.613-1.075l-0.006-0.003-1.84-1.062 2.488-1.383c0.384-0.218 0.639-0.625 0.639-1.09 0-0.69-0.56-1.25-1.25-1.25-0.222 0-0.43 0.058-0.61 0.159l0.006-0.003zM16.326 16l-3.076 1.776v-3.552zM8 28.75c-2.623 0-4.75-2.127-4.75-4.75 0-1.405 0.61-2.667 1.58-3.537l0.004-0.004c0.009-0.008 0.013-0.020 0.022-0.029 0.059-0.063 0.112-0.133 0.157-0.208l0.003-0.006c0.043-0.053 0.084-0.113 0.119-0.175l0.003-0.006c0.020-0.055 0.037-0.122 0.049-0.19l0.001-0.007c0.027-0.081 0.047-0.175 0.056-0.272l0-0.005 0.007-0.033v-13.52c-0.001-0.031-0.002-0.068-0.002-0.105 0-1.52 1.232-2.752 2.752-2.752s2.752 1.232 2.752 2.752c0 0.037-0.001 0.074-0.002 0.11l0-0.005v13.52l0.007 0.033c0.009 0.102 0.029 0.196 0.059 0.285l-0.003-0.009c0.013 0.076 0.030 0.142 0.052 0.206l-0.003-0.009c0.039 0.069 0.079 0.128 0.124 0.184l-0.002-0.002c0.048 0.081 0.101 0.151 0.16 0.215l-0.001-0.001c0.009 0.009 0.012 0.021 0.022 0.029 0.974 0.874 1.584 2.136 1.584 3.541 0 2.623-2.127 4.75-4.75 4.75-0 0-0 0-0 0v0zM15.198 24.515c0.012-0.173 0.052-0.338 0.052-0.515-0.013-1.425-0.436-2.75-1.157-3.863l0.017 0.028 3.466-2.001v4.921z"></path>
    </svg>
  );
};

export const CustomShield = ({ fill = "#646363", size, height, width, ...props }) => {
  return (
    <svg
      height={size || height || 800}
      width={size || width || 800}
      viewBox="0 0 512 512"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g>
        <path
          d="M468.125,128.73C304.284,99.474,234.069,0,234.069,0S163.847,99.474,0.013,128.73
            c0,64.367-5.858,277.944,234.056,383.27C473.976,406.675,468.125,193.098,468.125,128.73z"
          fill={fill}
        />
        <path
          d="M234.069,466.88C63.977,384.073,43.61,240.378,41.255,161.786
            c95.349-23.792,158.067-69.25,192.814-101.558c34.747,32.308,97.458,77.766,192.807,101.558
            C424.528,240.378,404.155,384.073,234.069,466.88z"
          fill="#F1891A"
        />
        <path
          d="M410.284,169.867c-1.813,70.95-19.134,203.716-176.215,279.583
            c-29.05-14.015-53.306-29.989-73.582-47.191c-27.411-23.173-47.513-48.568-62.293-74.285
            c-33.346-58.164-39.32-118.025-40.346-158.106c88.156-21.531,145.384-63.78,176.221-92.92
            c15.328,14.483,37.185,32.21,66.118,49.035c26.16,15.183,58.132,29.637,96.284,40.256
            C400.981,167.525,405.6,168.725,410.284,169.867z"
          fill="#F1891A"
        />
        <g>
          <path
            d="M234.069,76.947c-30.837,29.14-88.066,71.389-176.221,92.92
              c0.613,23.74,3.007,54.442,11.742,87.595h164.48V76.947z"
            fill="#336699"
          />
          <path
            d="M396.472,166.238c-38.152-10.618-70.124-25.073-96.284-40.256
              c-28.934-16.825-50.79-34.552-66.118-49.035v180.515h164.506c8.748-33.153,11.103-63.841,11.709-87.595
              C405.6,168.725,400.981,167.525,396.472,166.238z"
            fill="#F1891A"
            opacity="0.26"
          />
          <path
            d="M69.589,257.462c6.012,22.824,15.011,46.8,28.604,70.512
              c14.78,25.718,34.882,51.113,62.293,74.285c20.276,17.202,44.532,33.176,73.582,47.191V257.462H69.589z"
            fill="#F1891A"
            opacity="0.26"
          />
          <path
            d="M234.069,449.449c104.49-50.468,147.133-126.108,164.506-191.988H234.069V449.449z"
            fill="#336699"
          />
        </g>
        <path
          d="M234.069,0c0,0,70.215,99.474,234.056,128.73c0,64.367,5.851,277.944-234.056,383.27V0
            z"
          fill="#F1891A"
          opacity="0.08"
        />
      </g>
    </svg>
  );
};

export const WiFi = ({
  fill = "#ffffff",
  stroke = "#000000", // Default stroke color
  strokeWidth = 2, // Default stroke width
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill={fill}
      stroke={stroke} // Apply stroke globally (fallback)
      strokeWidth={strokeWidth} // Apply stroke width globally
      version="1.1"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      viewBox="0 0 898.199 898.199"
      height={size || height || 800}
      width={size || width || 800}
      {...props}
    >
      <g>
        <g>
          <circle
            cx="450.301"
            cy="711.2"
            r="93.4"
            stroke={stroke} // Ensure stroke is applied
            strokeWidth={strokeWidth} // Ensure stroke width is applied
            fill={fill} // Keep the original fill
          />
          <path
            d="M716.801,463.8C682.199,429.199,641.9,402,597,383.1c-46.5-19.7-95.9-29.7-146.699-29.7c-52,0-102.401,10.4-149.801,30.9
            c-45.7,19.8-86.5,48.1-121.3,84.1l115,111.2c41.3-42.7,96.601-66.2,156-66.2c57.9,0,112.4,22.601,153.4,63.5L716.801,463.8z"
            stroke={stroke}
            strokeWidth={strokeWidth}
            fill={fill}
          />
          <path
            d="M450.301,93.6C364.4,93.6,281,110.399,202.4,143.7C126.6,175.8,58.5,221.7,0,280.1l113.1,113.1
            c43.8-43.8,94.8-78.2,151.5-102.2c58.7-24.8,121.1-37.4,185.5-37.4c126.5,0,245.6,49,335.5,138l112.6-113.7
            c-58.1-57.7-126-103.1-201.398-134.8C618.699,110.3,535.699,93.6,450.301,93.6z"
            stroke={stroke}
            strokeWidth={strokeWidth}
            fill={fill}
          />
        </g>
      </g>
    </svg>
  );
};

export const NetWorking = ({
  fill = "#000000",
  stroke = "none",
  strokeWidth = 1,
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      fill={fill}
      height={size ?? height ?? 800}
      width={size ?? width ?? 800}
      viewBox="0 0 491.52 491.52"
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      xmlSpace="preserve"
      {...props}
    >
      <g>
        <path
          d="M491.52,450.56V327.68H327.68v51.2h-40.96v-87.71h68.01c55.53,0,95.83-36.32,95.83-86.37
          c0-36.38-23.23-68.81-56.66-81.11c3.05-10.11,4.14-20.6,3.41-32.27C394.24,41.41,349.72,0.4,298.07,0
          c-41.06-0.04-78.09,24.21-93.45,60.2c-15.1-11.2-34.18-16.6-53.59-14.79c-27.94,2.62-52.38,21.23-63.77,48.56
          c-5.42,12.99-4.7,27.42-3.46,36.22c-26.26,15.37-42.84,43.84-42.84,74.61c0,49.24,41.2,86.37,95.83,86.37h68.01v87.71h-40.96
          v-51.2H0v122.88h71.68v20.48H30.72v20.48h102.4v-20.48H92.16v-20.48h71.68v-51.2h61.44V291.17h40.96v108.19h61.44v51.2h71.68
          v20.48H358.4v20.48h102.4v-20.48h-40.96v-20.48H491.52z M143.36,430.08H20.48v-81.92h122.88V430.08z M136.79,270.69
          c-43.66,0-75.35-27.71-75.35-65.89c0-25.55,14.97-49.01,38.15-59.78l7.77-3.65l-2.2-8.3c-0.05-0.17-4.61-17.76,1-31.22
          c8.47-20.32,26.4-34.13,46.79-36.04c1.84-0.18,3.67-0.26,5.49-0.26c16.69,0,32.51,7.13,43.12,19.67l13.27,15.69l4.54-20.04
          c7.94-35.08,40.65-60.39,77.92-60.39c0.2,0,0.41,0,0.62,0c41.11,0.32,76.53,32.71,78.96,72.21c0.79,12.63-0.99,22.97-5.74
          33.51l-5.21,11.53l12.36,2.69c30.02,6.53,51.8,33.61,51.8,64.38c0,38.8-30.99,65.89-75.35,65.89H136.79z M348.16,430.08
          v-81.92h122.88v81.92H348.16z"
          fill={fill}
          stroke={stroke}
          strokeWidth={strokeWidth}
        />
      </g>
    </svg>
  );
};

export const Mobile = ({
  fill = "none", // No fill by default to allow stroke visibility
  stroke = "#000000", // Default stroke color
  strokeWidth = 2, // Default stroke width
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      width={size || width || 800}
      height={size || height || 800}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill={fill} // Keep as none to maintain stroke visibility
      {...props}
    >
      <path
        d="M8 18H10M15 15V17.8C15 18.9201 15 19.4802 14.782 19.908C14.5903 20.2843 14.2843 20.5903 13.908 20.782C13.4802 21 12.9201 21 11.8 21H6.2C5.0799 21 4.51984 21 4.09202 20.782C3.71569 20.5903 3.40973 20.2843 3.21799 19.908C3 19.4802 3 18.9201 3 17.8V6.2C3 5.0799 3 4.51984 3.21799 4.09202C3.40973 3.71569 3.71569 3.40973 4.09202 3.21799C4.51984 3 5.0799 3 6.2 3H9M13 7.05029C13.9609 7.24626 14.8429 7.72047 15.5364 8.41391C16.2298 9.10735 16.704 9.9894 16.9 10.9503M13 10.9502H13.01M13 3C15.0308 3.22586 16.9243 4.13605 18.3691 5.58088C19.814 7.02572 20.7241 8.91921 20.95 10.95"
        stroke={stroke}
        strokeWidth={strokeWidth}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const OnboardIcon = ({
  fill = "none", // Default no fill
  stroke = "#000000", // Default stroke color
  strokeWidth = 2, // Default stroke width
  size,
  height,
  width,
  ...props
}) => {
  return (
    <svg
      width={size || width || 800}
      height={size || height || 800}
      viewBox="0 0 48 48"
      xmlns="http://www.w3.org/2000/svg"
      fill={fill} // Apply fill
      {...props}
    >
      <g id="Layer_2" data-name="Layer 2">
        <g id="invisible_box" data-name="invisible box">
          <rect width="48" height="48" fill="none" />
        </g>
        <g id="icons_Q2" data-name="icons Q2">
          <path
            d="M9.7,40a2,2,0,0,1-1.4-.6A21.6,21.6,0,0,1,2,24a22,22,0,0,1,44,0,21.6,21.6,0,0,1-6.3,15.4,2,2,0,1,1-2.8-2.8,18,18,0,1,0-25.8,0,1.9,1.9,0,0,1,0,2.8A2,2,0,0,1,9.7,40Z"
            stroke={stroke}
            strokeWidth={strokeWidth}
            strokeLinecap="round"
            strokeLinejoin="round"
            fill={fill}
          />
          <path
            d="M22.6,14.6l-8,7.9a2.1,2.1,0,0,0-.2,2.7,1.9,1.9,0,0,0,3,.2L22,20.8V44a2,2,0,0,0,2,2h0a2,2,0,0,0,2-2V20.8l4.6,4.6a1.9,1.9,0,0,0,3-.2,2.1,2.1,0,0,0-.2-2.7l-8-7.9A1.9,1.9,0,0,0,22.6,14.6Z"
            stroke={stroke}
            strokeWidth={strokeWidth}
            strokeLinecap="round"
            strokeLinejoin="round"
            fill={fill}
          />
        </g>
      </g>
    </svg>
  );
};
